import java.util.*;
public class PalindromicSequences {
	
	public static HashSet<String> set = new HashSet<>();
	public static HashSet<String> set2 = new HashSet<>();
	
	
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		PalindromicSequences obj = new PalindromicSequences();
		String str = scanner.next();
		int n = str.length();
		for (int i = 1; i <= n; i++) {
	        for (int j = i - 1, k = i; j >= 0 && k < n; j--, k++) {
	            if (str.charAt(j) == str.charAt(k)) {
	                set2.add(str.substring(j, k+1));
	            } else {
	                break;
	            }
	        }
	    }
		for(String s : set2) {
			System.out.println(s);
		}
		
	}
	
	public void makeSequences1(String str,int start,  int n) {
		if(start < n) {
			String s = str.substring(start, n);
			set2.add(s);
			makeSequences1(str, start+1, n);
			palindrome(s);
//			System.out.println(s);
		}
		else {
			return;
		}
	}
	
	public void makeSequences2(String str, int start, int n) {
		if(n > start) {
			String s = str.substring(start, n-1);
			set2.add(s);
			makeSequences2(str, start, n-1);
			palindrome(s);
			
		}
		else {
			return;
		}
	}
	public void makeSequences3(String str, int start, int n) {
		
	}
	
	public static void palindrome(String str) {
//		System.out.println("hi");
		int len = str.length();
		int i = 0, j = len-1;
		char[] c = str.toCharArray();
		while(i != j) {
			if(c[i] != c[j])
				break;
			i++;
			j--;
		}
	
		if(i == j) {
			if(!set.contains(str)) {
//				System.out.println(str);
				set.add(str);
			}
			
		}
	}
}
