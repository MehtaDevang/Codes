import java.util.*;
public class NeedleInHayStack {
	static HashSet<String> set = new HashSet<>();
	public static void permute(String str, int l, int r) {
		System.out.println("Enter");
		if (l == r)
            set.add(str);
        else
        {
            for (int i = l; i <= r; i++)
            {
                str = swap(str,l,i);
                permute(str, l+1, r);
                str = swap(str,l,i);
            }
        }
		System.out.println("End");
	}
	
	public static String swap(String a, int i, int j)
    {
        char temp;
        char[] charArray = a.toCharArray();
        temp = charArray[i] ;
        charArray[i] = charArray[j];
        charArray[j] = temp;
        return String.valueOf(charArray);
    }
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		int t = Integer.parseInt(scanner.nextLine());
		
		for(int i = 0; i < t; i++) {
			String pattern = scanner.nextLine().trim().replace(" ", "");
			String text = scanner.nextLine().trim().replace(" ", "");
			int len = pattern.length();
			System.out.println("Sttar");
			permute(pattern, 0, len-1);
			
			for(String s : set) {
				System.out.println(s);
			}
		}
	}
}
